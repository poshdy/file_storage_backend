generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(cuid())
  email    String  @unique
  name     String
  hash     String?
  hashedRt String?

  verified        Boolean           @default(false)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  Folder          Folder[]
  File            File[]
  File_Folders    File_Folders[]
  ResetToken      ResetToken[]
  OTPVerification OTPVerification[]

  @@map("users")
}

model ResetToken {
  // id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  token     String
  expiresAt DateTime

  @@unique([token])
  @@map("reset_token")
}

model OTPVerification {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  otp    String

  createdAt DateTime @default(now())
  expiresAt DateTime

  @@map("otp_token")
}

model File {
  id           String         @id @default(cuid())
  userId       String
  user         User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  name         String
  file_ref     String         @unique
  type         String
  size         Int?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  File_Folders File_Folders[]

  @@map("files")
}

model Folder {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  name   String @default("untitled")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  File_Folders File_Folders[]

  @@map("folders")
}

model File_Folders {
  userId   String
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  fileId   String
  file     File   @relation(fields: [fileId], references: [id], onDelete: SetDefault)
  folderId String
  folder   Folder @relation(fields: [folderId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([folderId, fileId])
  @@map("file_folders")
}
